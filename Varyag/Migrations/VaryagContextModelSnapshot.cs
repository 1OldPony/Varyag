// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Varyag.Models;

namespace Varyag.Migrations
{
    [DbContext(typeof(VaryagContext))]
    partial class VaryagContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Varyag.Models.ProjectFoto", b =>
                {
                    b.Property<int>("ProjectFotoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Foto");

                    b.Property<int>("ShipProjectID");

                    b.HasKey("ProjectFotoID");

                    b.HasIndex("ShipProjectID");

                    b.ToTable("ProjectFoto");
                });

            modelBuilder.Entity("Varyag.Models.ShipProject", b =>
                {
                    b.Property<int>("ShipProjectID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CruiseShip");

                    b.Property<bool>("FishingShip");

                    b.Property<bool>("HistoricalShip");

                    b.Property<bool>("PassangerShip");

                    b.Property<int>("ProjectDeep");

                    b.Property<string>("ProjectDescription")
                        .IsRequired();

                    b.Property<int?>("ProjectEnginePower");

                    b.Property<int?>("ProjectFreshWaterCap");

                    b.Property<int?>("ProjectFuelCap");

                    b.Property<int>("ProjectLength");

                    b.Property<string>("ProjectName")
                        .IsRequired();

                    b.Property<int>("ProjectPassengerCap");

                    b.Property<int?>("ProjectSailArea");

                    b.Property<int?>("ProjectSleepingAreas");

                    b.Property<int?>("ProjectSpeed");

                    b.Property<int>("ProjectType");

                    b.Property<int>("ProjectVolume");

                    b.Property<int>("ProjectWindth");

                    b.Property<bool>("ReserchShip");

                    b.Property<bool>("StudyShip");

                    b.HasKey("ShipProjectID");

                    b.ToTable("ShipProject");
                });

            modelBuilder.Entity("Varyag.Models.ProjectFoto", b =>
                {
                    b.HasOne("Varyag.Models.ShipProject", "ShipProject")
                        .WithMany("Fotos")
                        .HasForeignKey("ShipProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
