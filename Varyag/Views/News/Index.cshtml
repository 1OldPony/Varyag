@model IEnumerable<Varyag.Models.News>

@{
    ViewData["Title"] = "Новости";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Новости</h1>

<p>
    <a asp-action="Create">Создать новость</a>
</p>

@foreach (var item in Model)
{
<div class="partNews" style="justify-content:flex-start">
    <div class="partNewsElementViewShort" id="shortStory" style="background-image:@item.ShortFotoPreview" >
        <div class="annotation">
            <div class="annotationText">
                @Html.Raw(item.ShortStory)
            </div>
        </div>
    </div>
    <div class="partNewsElementViewMiddle" id="middleStory" style="display:none">
        <div class="annotation">
            <div class="annotationText">
                @Html.Raw(item.MiddleStory)
            </div>
        </div>
    </div>
    <div class="partNewsElementViewWide" id="wideStory" style="display:none">
        <div class="annotation">
            <div class="annotationText">
                @Html.Raw(item.WideStory)
            </div>
        </div>
    </div>
</div>
    <div style="margin:1vw">
        <input type="button" value="Развернутый вид" style="margin:1vw" id="showFullNewsPreview" />
        <div class="MyContainer" id="fullNewsPreview" style="display:none">
            <h2>@item.Header</h2>
            <div>@Html.Raw(item.MainStory)</div>
            <div class="fotorama" data-nav="thumbs" data-width="100%" data-fit="contain" data-allowfullscreen="native">
                @await Component.InvokeAsync("Fotorama", new { newsId = item.NewsId })
            </div>
        </div>
        <p>
            <a asp-action="Edit" asp-route-id="@item.NewsId">Редактировать проект</a> |
            <a asp-action="Delete" asp-route-id="@item.NewsId">Удалить проект</a>
        </p>
    </div>
}